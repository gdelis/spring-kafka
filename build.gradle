plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.4'
  id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.gdelis'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
  maven {
    url "https://packages.confluent.io/maven/"
  }
}

dependencies {
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.kafka:spring-kafka"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"

  implementation "org.apache.avro:avro-maven-plugin:${apacheAvro}"
  implementation "org.apache.avro:avro-compiler:${apacheAvro}"
  implementation 'io.confluent:kafka-avro-serializer:7.6.1'
//  implementation 'io.confluent:kafka-schema-registry-client:7.6.1'
  implementation "io.confluent:kafka-avro-serializer:${confluentAvroSerializer}"
  implementation "jakarta.validation:jakarta.validation-api:${jakartaValidation}"

  compileOnly "org.projectlombok:lombok"

  developmentOnly "org.springframework.boot:spring-boot-devtools"

  runtimeOnly "org.postgresql:postgresql"

  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
  annotationProcessor "org.projectlombok:lombok"

  testImplementation "org.springframework.boot:spring-boot-testcontainers"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.springframework.kafka:spring-kafka-test"
  testImplementation "org.testcontainers:junit-jupiter"
  testImplementation "org.testcontainers:kafka"

  testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

tasks.named('test') {
  useJUnitPlatform()
}
